{"version":3,"file":"static/js/103.d46971d1.chunk.js","mappings":"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","sources":["pages/FinanceReport.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { format, startOfWeek, startOfMonth, isWithinInterval, parseISO } from 'date-fns';\r\n// Para grÃ¡fico (opcional, remova se nÃ£o quiser)\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\n\r\nexport default function FinanceReport() {\r\n  const [entries, setEntries] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n  const [period, setPeriod] = useState('all');\r\n  const [periodValue, setPeriodValue] = useState('');\r\n  const [dateStart, setDateStart] = useState('');\r\n  const [dateEnd, setDateEnd] = useState('');\r\n  const [typeFilter, setTypeFilter] = useState('all');\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Carrega entradas e retiradas\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    Promise.all([\r\n      getDocs(collection(db, 'cashEntries')),\r\n      getDocs(collection(db, 'cashEntriesHistory'))\r\n    ]).then(([entriesSnap, historySnap]) => {\r\n      setEntries(\r\n        entriesSnap.docs.map(d => {\r\n          const entry = d.data();\r\n          entry.date = entry.date?.toDate ? entry.date.toDate() : new Date(entry.date);\r\n          entry.type = 'entrada';\r\n          return entry;\r\n        })\r\n      );\r\n      setHistory(\r\n        historySnap.docs.map(d => {\r\n          const entry = d.data();\r\n          entry.date = entry.date?.toDate ? entry.date.toDate() : new Date(entry.date);\r\n          return entry;\r\n        })\r\n      );\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  // OpÃ§Ãµes de mÃªs e ano para filtro\r\n  const monthOptions = useMemo(() => {\r\n    const setM = new Set();\r\n    entries.forEach(entry => {\r\n      setM.add(format(startOfMonth(entry.date), 'yyyy-MM'));\r\n    });\r\n    return [...setM].sort();\r\n  }, [entries]);\r\n\r\n  const yearOptions = useMemo(() => {\r\n    const setY = new Set();\r\n    entries.forEach(entry => {\r\n      setY.add(entry.date.getFullYear());\r\n    });\r\n    return [...setY].sort();\r\n  }, [entries]);\r\n\r\n  // Filtra lanÃ§amentos por perÃ­odo, tipo, busca e intervalo de datas\r\n  const allItems = useMemo(() => [\r\n    ...entries,\r\n    ...history.filter(h => h.type === 'retirada')\r\n  ], [entries, history]);\r\n\r\n  const filteredItems = useMemo(() => {\r\n    let filtered = allItems;\r\n    if (period === 'month' && periodValue) {\r\n      filtered = filtered.filter(e => format(startOfMonth(e.date), 'yyyy-MM') === periodValue);\r\n    }\r\n    if (period === 'year' && periodValue) {\r\n      filtered = filtered.filter(e => e.date.getFullYear().toString() === periodValue);\r\n    }\r\n    if (dateStart && dateEnd) {\r\n      const start = parseISO(dateStart);\r\n      const end = parseISO(dateEnd);\r\n      filtered = filtered.filter(e =>\r\n        isWithinInterval(e.date, { start, end })\r\n      );\r\n    }\r\n    if (typeFilter !== 'all') {\r\n      filtered = filtered.filter(e => (e.type || 'entrada') === typeFilter);\r\n    }\r\n    if (search.trim()) {\r\n      filtered = filtered.filter(e =>\r\n        (e.reason || '').toLowerCase().includes(search.toLowerCase())\r\n      );\r\n    }\r\n    return filtered.sort((a, b) => b.date - a.date);\r\n  }, [allItems, period, periodValue, dateStart, dateEnd, typeFilter, search]);\r\n\r\n  // Agrupamento por semana e mÃªs (apenas ENTRADAS filtradas)\r\n  const { total, byWeek, byMonth } = useMemo(() => {\r\n    let total = 0;\r\n    const weeks = {};\r\n    const months = {};\r\n    filteredItems.forEach(entry => {\r\n      if ((entry.type || 'entrada') === 'entrada') {\r\n        total += entry.amount;\r\n        const week = format(startOfWeek(entry.date), 'yyyy-MM-dd');\r\n        const month = format(startOfMonth(entry.date), 'yyyy-MM');\r\n        weeks[week] = (weeks[week] || 0) + entry.amount;\r\n        months[month] = (months[month] || 0) + entry.amount;\r\n      }\r\n    });\r\n    return { total, byWeek: weeks, byMonth: months };\r\n  }, [filteredItems]);\r\n\r\n  // Soma total de retiradas filtradas\r\n  const totalWithdrawals = useMemo(\r\n    () => filteredItems.filter(i => (i.type || 'entrada') === 'retirada').reduce((sum, w) => sum + (w.amount || 0), 0),\r\n    [filteredItems]\r\n  );\r\n\r\n  // Saldo final: entradas - retiradas\r\n  const finalBalance = total - totalWithdrawals;\r\n\r\n  // ExportaÃ§Ã£o CSV\r\n  function handleExportCSV() {\r\n    const header = ['Tipo', 'Data', 'Valor', 'Motivo'];\r\n    const rows = filteredItems.map(e => [\r\n      (e.type === 'retirada' ? 'Retirada' : 'Entrada'),\r\n      format(e.date, 'yyyy-MM-dd'),\r\n      e.amount.toFixed(2),\r\n      e.reason || ''\r\n    ]);\r\n    const csv = [header, ...rows]\r\n      .map(r => r.map(f => `\"${(f || '').replace(/\"/g, '\"\"')}\"`).join(';'))\r\n      .join('\\n');\r\n    const csvContent = \"\\uFEFF\" + csv;\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'financeiro.csv';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  // ExportaÃ§Ã£o TXT (relatÃ³rio simples)\r\n  function handleDownload() {\r\n    const report = [\r\n      'RelatÃ³rio Financeiro',\r\n      `Saldo total: R$ ${finalBalance.toFixed(2)}`,\r\n      `(Entradas: R$ ${total.toFixed(2)} - Retiradas: R$ ${totalWithdrawals.toFixed(2)})`,\r\n      '',\r\n      'Entradas por mÃªs:',\r\n      ...Object.entries(byMonth).map(([month, value]) => `${month}: R$ ${value.toFixed(2)}`),\r\n      '',\r\n      'Entradas por semana:',\r\n      ...Object.entries(byWeek).map(([week, value]) => `${week}: R$ ${value.toFixed(2)}`),\r\n      '',\r\n      'LanÃ§amentos detalhados:',\r\n      ...filteredItems.map(e =>\r\n        `${format(e.date, 'yyyy-MM-dd')}: ${e.type === 'retirada' ? '-' : ''}R$ ${e.amount.toFixed(2)} - ${e.reason || ''}`\r\n      ),\r\n    ].join('\\n');\r\n    const blob = new Blob([report], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'relatorio-financeiro.txt';\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  // Dados para grÃ¡fico (opcional)\r\n  const chartData = useMemo(() => {\r\n    // Agrupa por mÃªs, soma entradas e retiradas\r\n    const months = {};\r\n    filteredItems.forEach(e => {\r\n      const m = format(startOfMonth(e.date), 'yyyy-MM');\r\n      if (!months[m]) months[m] = { month: m, entradas: 0, retiradas: 0 };\r\n      if ((e.type || 'entrada') === 'entrada') months[m].entradas += e.amount;\r\n      else months[m].retiradas += e.amount;\r\n    });\r\n    return Object.values(months).sort((a, b) => a.month.localeCompare(b.month));\r\n  }, [filteredItems]);\r\n\r\n  if (loading) return <div>Carregando...</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto bg-white dark:bg-gray-800 p-6 rounded shadow\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">RelatÃ³rio Financeiro</h2>\r\n\r\n      {/* Resumo rÃ¡pido */}\r\n      <div className=\"mb-4 flex flex-wrap gap-4 items-center\">\r\n        <span><b>Saldo total:</b> <span className={finalBalance < 0 ? 'text-red-600' : 'text-green-700'}>R$ {finalBalance.toFixed(2)}</span></span>\r\n        <span><b>Total de entradas:</b> R$ {total.toFixed(2)}</span>\r\n        <span><b>Total de retiradas:</b> R$ {totalWithdrawals.toFixed(2)}</span>\r\n      </div>\r\n\r\n      {/* Filtros */}\r\n      <div className=\"flex flex-wrap gap-2 items-center mb-4\">\r\n        <label>\r\n          PerÃ­odo:\r\n          <select\r\n            value={period}\r\n            onChange={e => { setPeriod(e.target.value); setPeriodValue(''); }}\r\n            className=\"ml-2\"\r\n          >\r\n            <option value=\"all\">Todos</option>\r\n            <option value=\"month\">Por mÃªs</option>\r\n            <option value=\"year\">Por ano</option>\r\n          </select>\r\n        </label>\r\n        {period === 'month' && (\r\n          <select\r\n            value={periodValue}\r\n            onChange={e => setPeriodValue(e.target.value)}\r\n          >\r\n            <option value=\"\">Selecione mÃªs</option>\r\n            {monthOptions.map(m => <option key={m} value={m}>{m}</option>)}\r\n          </select>\r\n        )}\r\n        {period === 'year' && (\r\n          <select\r\n            value={periodValue}\r\n            onChange={e => setPeriodValue(e.target.value)}\r\n          >\r\n            <option value=\"\">Selecione ano</option>\r\n            {yearOptions.map(y => <option key={y} value={y}>{y}</option>)}\r\n          </select>\r\n        )}\r\n        <input\r\n          type=\"date\"\r\n          value={dateStart}\r\n          onChange={e => setDateStart(e.target.value)}\r\n          className=\"border rounded px-2 py-1\"\r\n          placeholder=\"Data inÃ­cio\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={dateEnd}\r\n          onChange={e => setDateEnd(e.target.value)}\r\n          className=\"border rounded px-2 py-1\"\r\n          placeholder=\"Data fim\"\r\n        />\r\n        <select\r\n          value={typeFilter}\r\n          onChange={e => setTypeFilter(e.target.value)}\r\n          className=\"border rounded px-2 py-1\"\r\n        >\r\n          <option value=\"all\">Entradas e Retiradas</option>\r\n          <option value=\"entrada\">Somente Entradas</option>\r\n          <option value=\"retirada\">Somente Retiradas</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar motivo...\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n          className=\"border rounded px-2 py-1 ml-2\"\r\n        />\r\n        <button\r\n          onClick={handleExportCSV}\r\n          className=\"px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700\"\r\n          disabled={!filteredItems.length}\r\n        >\r\n          Exportar CSV\r\n        </button>\r\n        <button\r\n          onClick={handleDownload}\r\n          className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700\"\r\n          disabled={!filteredItems.length}\r\n        >\r\n          Baixar relatÃ³rio TXT\r\n        </button>\r\n      </div>\r\n\r\n      {/* GrÃ¡fico de barras por mÃªs */}\r\n      <h3 className=\"font-semibold mt-4\">GrÃ¡fico de Entradas e Retiradas por mÃªs</h3>\r\n      <div style={{ width: '100%', height: 220 }}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <BarChart data={chartData}>\r\n            <XAxis dataKey=\"month\" />\r\n            <YAxis />\r\n            <Tooltip formatter={v => `R$ ${v.toFixed(2)}`} />\r\n            <Legend />\r\n            <Bar dataKey=\"entradas\" fill=\"#16a34a\" name=\"Entradas\" />\r\n            <Bar dataKey=\"retiradas\" fill=\"#dc2626\" name=\"Retiradas\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n\r\n      {/* Entradas por mÃªs */}\r\n      <h3 className=\"font-semibold mt-4\">Entradas por mÃªs</h3>\r\n      <ul>\r\n        {Object.entries(byMonth).map(([month, value]) => (\r\n          <li key={month}>{month}: <b>R$ {value.toFixed(2)}</b></li>\r\n        ))}\r\n      </ul>\r\n      {/* Entradas por semana */}\r\n      <h3 className=\"font-semibold mt-4\">Entradas por semana</h3>\r\n      <ul>\r\n        {Object.entries(byWeek).map(([week, value]) => (\r\n          <li key={week}>{week}: <b>R$ {value.toFixed(2)}</b></li>\r\n        ))}\r\n      </ul>\r\n      {/* LanÃ§amentos detalhados */}\r\n      <h3 className=\"font-semibold mt-4\">HistÃ³rico detalhado</h3>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full bg-white rounded shadow overflow-hidden text-sm\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"px-2 py-1 text-left\">Tipo</th>\r\n              <th className=\"px-2 py-1 text-left\">Data</th>\r\n              <th className=\"px-2 py-1 text-right\">Valor</th>\r\n              <th className=\"px-2 py-1 text-left\">Motivo</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredItems.map((item, idx) => (\r\n              <tr key={idx} className=\"border-b last:border-0\">\r\n                <td className={`px-2 py-1 ${item.type === 'retirada' ? 'text-red-600' : 'text-green-700'}`}>\r\n                  {item.type === 'retirada' ? 'Retirada' : 'Entrada'}\r\n                </td>\r\n                <td className=\"px-2 py-1\">{format(item.date, 'yyyy-MM-dd')}</td>\r\n                <td className={`px-2 py-1 text-right font-bold ${item.type === 'retirada' ? 'text-red-600' : 'text-green-700'}`}>\r\n                  R$ {item.amount.toFixed(2)}\r\n                </td>\r\n                <td className=\"px-2 py-1\">{item.reason || '-'}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["FinanceReport","entries","setEntries","useState","history","setHistory","search","setSearch","period","setPeriod","periodValue","setPeriodValue","dateStart","setDateStart","dateEnd","setDateEnd","typeFilter","setTypeFilter","loading","setLoading","useEffect","Promise","all","getDocs","collection","db","then","_ref","entriesSnap","historySnap","docs","map","d","_entry$date","entry","data","date","toDate","Date","type","_entry$date2","monthOptions","useMemo","setM","Set","forEach","add","format","startOfMonth","sort","yearOptions","setY","getFullYear","allItems","filter","h","filteredItems","filtered","e","toString","start","parseISO","end","isWithinInterval","trim","reason","toLowerCase","includes","a","b","total","byWeek","byMonth","weeks","months","amount","week","startOfWeek","month","totalWithdrawals","i","reduce","sum","w","finalBalance","chartData","m","entradas","retiradas","Object","values","localeCompare","_jsx","children","_jsxs","className","toFixed","value","onChange","target","y","placeholder","onClick","csv","r","f","concat","replace","join","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","disabled","length","report","_ref2","_ref3","style","width","height","ResponsiveContainer","BarChart","XAxis","dataKey","YAxis","Tooltip","formatter","v","Legend","Bar","fill","name","_ref4","_ref5","item","idx"],"sourceRoot":""}