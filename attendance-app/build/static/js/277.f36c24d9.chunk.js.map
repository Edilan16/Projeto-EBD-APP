{"version":3,"file":"static/js/277.f36c24d9.chunk.js","mappings":"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","sources":["pages/FinanceEntry.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\nimport { doc, setDoc, getDoc, collection, onSnapshot, addDoc, query, orderBy, deleteDoc } from 'firebase/firestore';\r\nimport { startOfWeek, format } from 'date-fns';\r\n\r\nexport default function FinanceEntry() {\r\n  const [selectedDate, setSelectedDate] = useState(() => {\r\n    const sunday = startOfWeek(new Date(), { weekStartsOn: 0 });\r\n    return format(sunday, 'yyyy-MM-dd');\r\n  });\r\n  const [amount, setAmount] = useState('');\r\n  const [history, setHistory] = useState([]);\r\n  const [withdrawAmount, setWithdrawAmount] = useState('');\r\n  const [withdrawReason, setWithdrawReason] = useState('');\r\n  const [toast, setToast] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  // Carrega histórico de lançamentos e retiradas\r\n  useEffect(() => {\r\n    const q = query(collection(db, 'cashEntriesHistory'), orderBy('date', 'desc'));\r\n    const unsub = onSnapshot(q, snap => {\r\n      const data = snap.docs.map(d => ({ id: d.id, ...d.data() }));\r\n      setHistory(data);\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  // Carrega valor caso já exista lançamento na data selecionada\r\n  useEffect(() => {\r\n    const ref = doc(db, 'cashEntries', selectedDate);\r\n    getDoc(ref).then(docSnap => {\r\n      if (docSnap.exists()) {\r\n        setAmount(docSnap.data().amount.toString());\r\n      } else {\r\n        setAmount('');\r\n      }\r\n    });\r\n  }, [selectedDate]);\r\n\r\n  function showToast(msg) {\r\n    setToast(msg);\r\n    setTimeout(() => setToast(''), 2000);\r\n  }\r\n\r\n  // Lançamento de entrada (agora soma ao valor existente)\r\n  const handleSave = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    const num = parseFloat(amount.replace(',', '.'));\r\n    if (isNaN(num) || num <= 0) {\r\n      setError('Digite um valor válido e maior que zero.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      const ref = doc(db, 'cashEntries', selectedDate);\r\n      const docSnap = await getDoc(ref);\r\n      let current = 0;\r\n      if (docSnap.exists()) {\r\n        current = docSnap.data().amount || 0;\r\n      }\r\n      const newAmount = current + num;\r\n\r\n      await setDoc(ref, {\r\n        date: selectedDate,\r\n        amount: newAmount,\r\n        createdAt: new Date()\r\n      });\r\n      await addDoc(collection(db, 'cashEntriesHistory'), {\r\n        type: 'entrada',\r\n        date: selectedDate,\r\n        amount: num,\r\n        reason: 'Lançamento de entrada',\r\n        createdAt: new Date()\r\n      });\r\n      showToast('Entrada salva com sucesso!');\r\n    } catch (err) {\r\n      setError('Erro ao salvar entrada.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Exclusão de lançamento (apenas se criado há menos de 5 minutos)\r\n  const handleDeleteEntry = async (entry) => {\r\n    const createdAt = entry.createdAt?.toDate ? entry.createdAt.toDate() : new Date(entry.createdAt);\r\n    const canDelete = (Date.now() - createdAt.getTime()) < 5 * 60 * 1000; // 5 minutos\r\n    if (!canDelete) {\r\n      showToast('Só é possível excluir lançamentos feitos nos últimos 5 minutos.');\r\n      return;\r\n    }\r\n    const confirm = window.confirm('Tem certeza que deseja excluir este lançamento?');\r\n    if (!confirm) return;\r\n\r\n    try {\r\n      // Se for uma entrada, subtrai o valor do cashEntries (não remove mais o doc inteiro)\r\n      if (entry.type === 'entrada') {\r\n        const ref = doc(db, 'cashEntries', entry.date);\r\n        const docSnap = await getDoc(ref);\r\n        if (docSnap.exists()) {\r\n          let current = docSnap.data().amount || 0;\r\n          let newAmount = current - entry.amount;\r\n          if (newAmount <= 0) {\r\n            await deleteDoc(ref);\r\n          } else {\r\n            await setDoc(ref, {\r\n              date: entry.date,\r\n              amount: newAmount,\r\n              createdAt: docSnap.data().createdAt || new Date()\r\n            });\r\n          }\r\n        }\r\n      }\r\n      await deleteDoc(doc(db, 'cashEntriesHistory', entry.id));\r\n      showToast('Lançamento excluído!');\r\n    } catch (err) {\r\n      setError('Erro ao excluir lançamento.');\r\n    }\r\n  };\r\n\r\n  // Lançamento de retirada\r\n  const handleWithdraw = async e => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    const num = parseFloat(withdrawAmount.replace(',', '.'));\r\n    if (isNaN(num) || num <= 0) {\r\n      setError('Digite um valor válido e maior que zero para retirada.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!withdrawReason.trim()) {\r\n      setError('Informe o motivo da retirada.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!window.confirm(`Confirma registrar retirada de R$ ${num.toFixed(2)}?`)) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    try {\r\n      await addDoc(collection(db, 'cashEntriesHistory'), {\r\n        type: 'retirada',\r\n        date: format(new Date(), 'yyyy-MM-dd'),\r\n        amount: num,\r\n        reason: withdrawReason,\r\n        createdAt: new Date()\r\n      });\r\n      setWithdrawAmount('');\r\n      setWithdrawReason('');\r\n      showToast('Retirada registrada!');\r\n    } catch (err) {\r\n      setError('Erro ao registrar retirada.');\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-lg mx-auto space-y-6\">\r\n      <h2 className=\"text-xl font-semibold dark:text-gray-100\">Lançar Caixa Semanal</h2>\r\n\r\n      {toast && (\r\n        <div className=\"px-4 py-2 bg-green-100 text-green-800 rounded shadow text-center transition\">\r\n          {toast}\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div className=\"px-4 py-2 bg-red-100 text-red-800 rounded shadow text-center transition\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSave} className=\"flex flex-col space-y-4\">\r\n        <div>\r\n          <label className=\"block mb-1 dark:text-gray-300\">Domingo da Semana</label>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate}\r\n            onChange={e => setSelectedDate(e.target.value)}\r\n            className=\"w-full px-3 py-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block mb-1 dark:text-gray-300\">Valor (R$)</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={amount}\r\n            onChange={e => setAmount(e.target.value)}\r\n            placeholder=\"0.00\"\r\n            className=\"w-full px-3 py-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"self-end px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Salvando...' : 'Salvar Entrada'}\r\n        </button>\r\n      </form>\r\n\r\n      <form onSubmit={handleWithdraw} className=\"flex flex-col space-y-4 border-t pt-6 mt-6\">\r\n        <h3 className=\"font-medium dark:text-gray-100\">Registrar Retirada</h3>\r\n        <div>\r\n          <label className=\"block mb-1 dark:text-gray-300\">Valor da Retirada (R$)</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={withdrawAmount}\r\n            onChange={e => setWithdrawAmount(e.target.value)}\r\n            placeholder=\"0.00\"\r\n            className=\"w-full px-3 py-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label className=\"block mb-1 dark:text-gray-300\">Motivo da Retirada</label>\r\n          <input\r\n            type=\"text\"\r\n            value={withdrawReason}\r\n            onChange={e => setWithdrawReason(e.target.value)}\r\n            placeholder=\"Ex: Compra de material\"\r\n            className=\"w-full px-3 py-2 border rounded dark:bg-gray-700 dark:border-gray-600 dark:text-gray-200\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"self-end px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Registrando...' : 'Registrar Retirada'}\r\n        </button>\r\n      </form>\r\n\r\n      <div>\r\n        <h3 className=\"font-medium dark:text-gray-100\">Histórico</h3>\r\n        <ul className=\"mt-2 space-y-1\">\r\n          {history.map(entry => {\r\n            const createdAt = entry.createdAt?.toDate ? entry.createdAt.toDate() : new Date(entry.createdAt);\r\n            const canDelete = (Date.now() - createdAt.getTime()) < 5 * 60 * 1000; // 5 minutos\r\n            return (\r\n              <li key={entry.id} className=\"flex justify-between items-center\">\r\n                <span className=\"dark:text-gray-200\">\r\n                  {entry.date} - {entry.type === 'retirada' ? 'Retirada' : 'Entrada'}\r\n                  {entry.reason ? ` (${entry.reason})` : ''}\r\n                </span>\r\n                <span className={entry.type === 'retirada' ? \"text-red-600\" : \"text-green-600\"}>\r\n                  R$ {entry.amount.toFixed(2)}\r\n                </span>\r\n                {canDelete && (\r\n                  <button\r\n                    className=\"ml-2 px-2 py-1 text-xs bg-red-500 text-white rounded\"\r\n                    onClick={() => handleDeleteEntry(entry)}\r\n                  >\r\n                    Excluir\r\n                  </button>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":["FinanceEntry","selectedDate","setSelectedDate","useState","sunday","startOfWeek","Date","weekStartsOn","format","amount","setAmount","history","setHistory","withdrawAmount","setWithdrawAmount","withdrawReason","setWithdrawReason","toast","setToast","loading","setLoading","error","setError","showToast","msg","setTimeout","useEffect","q","query","collection","db","orderBy","unsub","onSnapshot","snap","data","docs","map","d","_objectSpread","id","ref","doc","getDoc","then","docSnap","exists","toString","_jsxs","className","children","_jsx","onSubmit","async","e","preventDefault","num","parseFloat","replace","isNaN","current","newAmount","setDoc","date","createdAt","addDoc","type","reason","err","value","onChange","target","required","min","step","placeholder","disabled","trim","window","confirm","concat","toFixed","entry","_entry$createdAt2","toDate","canDelete","now","getTime","onClick","_entry$createdAt","deleteDoc","handleDeleteEntry"],"sourceRoot":""}